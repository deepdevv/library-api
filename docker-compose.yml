version: "3.9"

services:
  db:
    image: postgres:15
    container_name: library-db
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-55432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-library}
      POSTGRES_USER: ${POSTGRES_USER:-library}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-library}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-library} -d ${POSTGRES_DB:-library}"]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: library-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # IMPORTANT: inside containers, the DB host is "db", not "localhost"
      DATABASE_URL: postgresql+asyncpg://library:library@db:5432/library
      POSTGRES_DB: ${POSTGRES_DB:-library}
      POSTGRES_USER: ${POSTGRES_USER:-library}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-library}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      APP_ENV: prod
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      
volumes:
  pgdata:
