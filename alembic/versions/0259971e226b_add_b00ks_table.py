"""add b00ks table

Revision ID: 0259971e226b
Revises: b83d218911cf
Create Date: 2025-08-26 20:04:16.647516

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0259971e226b'
down_revision: Union[str, Sequence[str], None] = 'b83d218911cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('serial_number', sa.CHAR(length=6), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('author', sa.Text(), nullable=False),
    sa.Column('is_borrowed', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('borrower_card', sa.CHAR(length=6), nullable=True),
    sa.Column('borrowed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("( (is_borrowed = false AND borrower_card IS NULL AND borrowed_at IS NULL) OR  (is_borrowed = true  AND borrower_card ~ '^[0-9]{6}$' AND borrowed_at IS NOT NULL))", name=op.f('ck_books_borrow_state_consistency')),
    sa.CheckConstraint("borrower_card IS NULL OR borrower_card ~ '^[0-9]{6}$'", name=op.f('ck_books_borrower_card_six_digits_or_null')),
    sa.CheckConstraint("serial_number ~ '^[0-9]{6}$'", name=op.f('ck_books_serial_number_six_digits')),
    sa.PrimaryKeyConstraint('serial_number', name=op.f('pk_books'))
    )
    op.create_index('idx_books_is_borrowed', 'books', ['is_borrowed'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_books_is_borrowed', table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
